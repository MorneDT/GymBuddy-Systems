// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PomegranateTechnologies.API.Data;

namespace PomegranateTechnologies.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201008194312_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("PomegranateTechnologies.API.Models.Exercise", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Reps")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Sets")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("WorkoutId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercise");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.Person", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUser", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("SystemUser");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUserAccount", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AccountLockedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAccountLocked")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SystemUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SystemUserId");

                    b.ToTable("SystemUserAccount");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUserDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("DetailHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("DetailSalt")
                        .HasColumnType("BLOB");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SystemUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SystemUserId");

                    b.ToTable("SystemUserDetail");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.Workout", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CaptureDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.Exercise", b =>
                {
                    b.HasOne("PomegranateTechnologies.API.Models.Workout", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId");
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUser", b =>
                {
                    b.HasOne("PomegranateTechnologies.API.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUserAccount", b =>
                {
                    b.HasOne("PomegranateTechnologies.API.Models.SystemUser", "SystemUser")
                        .WithMany("SystemUserAccounts")
                        .HasForeignKey("SystemUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.SystemUserDetail", b =>
                {
                    b.HasOne("PomegranateTechnologies.API.Models.SystemUser", "SystemUser")
                        .WithMany("SystemUserDetails")
                        .HasForeignKey("SystemUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PomegranateTechnologies.API.Models.Workout", b =>
                {
                    b.HasOne("PomegranateTechnologies.API.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
